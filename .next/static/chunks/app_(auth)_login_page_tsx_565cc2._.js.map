{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/jasha/Downloads/overseas/travel_yt/app/%28auth%29/login/page.tsx"],"sourcesContent":["'use client'; // Mark this as a Client Component\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useState, useEffect } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport default function LoginPage() {\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // Check if the user is already logged in\r\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n    setIsLoggedIn(loggedIn);\r\n  }, []);\r\n\r\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Send POST request to the login API route\r\n      const response = await axios.post('/api/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      // If successful, store the token and user role in localStorage\r\n      if (response.status === 200) {\r\n        const { token, user } = response.data;\r\n        localStorage.setItem('isLoggedIn', 'true');\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('role', user.role);\r\n        setIsLoggedIn(true);\r\n\r\n        toast.success('Login successful!');\r\n\r\n        // Redirect based on role\r\n        router.push(user.role === 'agent' ? '/agent' : user.role === 'admin' ? '/admin' : '/dashboard');\r\n      }\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        // Axios error handling\r\n        toast.error(err.response?.data?.message || 'An error occurred. Please try again.');\r\n      }\r\n    }finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear session\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    setIsLoggedIn(false);\r\n    router.push('/login');\r\n\r\n    toast.success('Logged out successfully!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-r from-gray-400 to-blue-950\">\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-800 text-center\">Login to Your Account</h2>\r\n        {isLoggedIn ? (\r\n          <div className=\"flex items-center justify-center\">\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"flex items-center justify-center p-2 rounded-full bg-gray-200 hover:bg-gray-300\"\r\n              aria-label=\"Logout\"\r\n            >\r\n              <span className=\"text-gray-700\">ðŸ‘¤</span>\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleLogin} className=\"space-y-6\">\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                required\r\n                disabled={isLoading}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                required\r\n                disabled={isLoading}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"block w-full text-center rounded px-14 md:px-28 -mt-4 py-2.5 overflow-hidden group bg-rose-600 relative hover:bg-gradient-to-r hover:from-red-500 hover:to-red-400 text-white hover:ring-2 hover:ring-offset-2 hover:ring-red-400 transition-all ease-out duration-300\"\r\n              >\r\n                {isLoading ? (\r\n                  <span className=\"flex items-center justify-center\">\r\n                    <svg\r\n                      className=\"animate-spin h-5 w-5 mr-2 text-white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path\r\n                        className=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8v4l3-3-3-3v4a8 8 0 00-8 8h4z\"\r\n                      ></path>\r\n                    </svg>\r\n                    Logging in...\r\n                  </span>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"absolute right-0 w-8 h-32 -mt-12 transition-all duration-1000 transform translate-x-12 bg-white opacity-10 rotate-12 group-hover:-translate-x-40 ease\"></span>\r\n                    <span className=\"relative font-bold\">Login</span>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n        {!isLoggedIn && (\r\n          <div className=\"mt-6 text-center\">\r\n            <p className=\"text-sm text-gray-600\">\r\n              Don&apos;t have an account?{' '}\r\n              <Link href=\"/auth/signup\" className=\"text-blue-600 hover:underline\">\r\n                Sign up\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}