{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/jasha/Downloads/overseas/travel_yt/app/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\n\r\nconst connectDB = async () => {\r\n  if (mongoose.connections[0].readyState) return;\r\n  await mongoose.connect(process.env.MONGODB_URI);\r\n};\r\n\r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,YAAY;IAChB,IAAI,iGAAA,CAAA,UAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE;IACxC,MAAM,iGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;AAChD;uCAEe"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/jasha/Downloads/overseas/travel_yt/app/models/BookNow.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst bookingSchema = new mongoose.Schema({\r\n  fullName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  phoneNumber: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  destination: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\n// Check if the model already exists to avoid redefining it\r\nexport default mongoose.models.Booking || mongoose.model('Booking', bookingSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;uCAGe,iGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,iGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/jasha/Downloads/overseas/travel_yt/app/lib/mailer.js"],"sourcesContent":["// lib/mailer.js\r\nimport nodemailer from 'nodemailer';\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  service: 'gmail', // or your email service\r\n  auth: {\r\n    user: process.env.EMAIL_USER, // your email address\r\n    pass: process.env.EMAIL_PASSWORD, // your email password\r\n  },\r\n});\r\n\r\nexport const sendEmail = async (to, subject, text) => {\r\n  const mailOptions = {\r\n    from: process.env.EMAIL_USER,\r\n    to,\r\n    subject,\r\n    text,\r\n  };\r\n\r\n  try {\r\n    await transporter.sendMail(mailOptions);\r\n    console.log(`Email sent to ${to}`);\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n  }\r\n};"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;IAC7C,SAAS;IACT,MAAM;QACJ,MAAM,QAAQ,GAAG,CAAC,UAAU;QAC5B,MAAM,QAAQ,GAAG,CAAC,cAAc;IAClC;AACF;AAEO,MAAM,YAAY,OAAO,IAAI,SAAS;IAC3C,MAAM,cAAc;QAClB,MAAM,QAAQ,GAAG,CAAC,UAAU;QAC5B;QACA;QACA;IACF;IAEA,IAAI;QACF,MAAM,YAAY,QAAQ,CAAC;QAC3B,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,IAAI;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;IACxC;AACF"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/jasha/Downloads/overseas/travel_yt/app/api/auth/booknow/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport dbConnect from '../../../lib/mongodb';\r\nimport Booking from '../../../models/BookNow';\r\nimport { sendEmail } from '../../../lib/mailer';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    // Connect to the database\r\n    await dbConnect();\r\n\r\n    // Parse the request body\r\n    const { fullName, email, phoneNumber, destination } = await request.json();\r\n\r\n    // Validate the data\r\n    if (!fullName || !email || !phoneNumber || !destination) {\r\n      return NextResponse.json(\r\n        { message: 'All fields are required' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create a new booking\r\n    const newBooking = new Booking({\r\n      fullName,\r\n      email,\r\n      phoneNumber,\r\n      destination,\r\n    });\r\n\r\n    // Save the booking to the database\r\n    await newBooking.save();\r\n\r\n    // Send email to the user\r\n    const userSubject = 'Thank you for signing up!';\r\n    const userText = `Dear ${fullName},\\n\\nThank you for signing up with us. We will get back to you shortly.\\n\\nBest regards,\\nYour Company`;\r\n    await sendEmail(email, userSubject, userText);\r\n\r\n    // Send email to the admin\r\n    const adminEmail = process.env.ADMIN_EMAIL; // Admin email address\r\n    const adminSubject = 'New User Signup';\r\n    const adminText = `A new user has signed up:\\n\\nName: ${fullName}\\nEmail: ${email}\\nPhone: ${phoneNumber}\\nDestination: ${destination}`;\r\n    await sendEmail(adminEmail, adminSubject, adminText);\r\n\r\n    // Return a success response\r\n    return NextResponse.json(\r\n      { message: 'Booking created successfully', booking: newBooking },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    console.error('Error in POST function:', error);\r\n    return NextResponse.json(\r\n      { message: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,0BAA0B;QAC1B,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAS,AAAD;QAEd,yBAAyB;QACzB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,QAAQ,IAAI;QAExE,oBAAoB;QACpB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa;YACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA0B,GACrC;gBAAE,QAAQ;YAAI;QAElB;QAEA,uBAAuB;QACvB,MAAM,aAAa,IAAI,0HAAA,CAAA,UAAO,CAAC;YAC7B;YACA;YACA;YACA;QACF;QAEA,mCAAmC;QACnC,MAAM,WAAW,IAAI;QAErB,yBAAyB;QACzB,MAAM,cAAc;QACpB,MAAM,WAAW,CAAC,KAAK,EAAE,SAAS,sGAAsG,CAAC;QACzI,MAAM,CAAA,GAAA,sHAAA,CAAA,YAAS,AAAD,EAAE,OAAO,aAAa;QAEpC,0BAA0B;QAC1B,MAAM,aAAa,QAAQ,GAAG,CAAC,WAAW,EAAE,sBAAsB;QAClE,MAAM,eAAe;QACrB,MAAM,YAAY,CAAC,mCAAmC,EAAE,SAAS,SAAS,EAAE,MAAM,SAAS,EAAE,YAAY,eAAe,EAAE,aAAa;QACvI,MAAM,CAAA,GAAA,sHAAA,CAAA,YAAS,AAAD,EAAE,YAAY,cAAc;QAE1C,4BAA4B;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAgC,SAAS;QAAW,GAC/D;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}